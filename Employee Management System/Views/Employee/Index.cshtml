@using Employee_Management_System.Domain.Enums
@model Employee_Management_System.Application.Common.Model.Pagination.PaginatedListResponse<Employee_Management_System.Application.DTOs.EmployeeDto.GetEmployeeResponseDto>

@{
    ViewBag.Title = "Employee List";
}

<h2 class="text-center">Employees</h2>

<form method="get" asp-action="Index">
    <div class="form-inline mb-3">
        <div class="form-group">
            <label for="search">Search</label>
            <input type="text" id="search" name="SearchQuery" class="form-control" placeholder="Search..." value="@ViewBag.SearchQuery" />
        </div>
        <div class="form-group ml-3">
            <label for="departmentFilter">Filter by Department:</label>
            <select id="departmentFilter" name="DepartmentId" class="form-control">
                <option value="">--Select Department--</option>
                @foreach (var department in ViewBag.Departments)
                {
                    <option value="@department.DepartmentID">@department.DepartmentName</option>
                }
            </select>

        </div>
        <button type="submit" class="btn btn-primary ml-3 mt-2">Apply Filters</button>
    </div>
</form>
<a href="@Url.Action("Create", "Employee")" class="btn btn-success mb-3">Create Employee</a>

@if (!Model.Data.Any())
{
    <p>No employees found.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    <a href="@Url.Action("Index", "Employee", new { SortBy = EmployeeSortBy.Name, IsDescending = ViewBag.SortBy == EmployeeSortBy.Name && !ViewBag.IsDescending })">
                        Name
                    </a>
                </th>
                <th>
                    <a href="@Url.Action("Index", "Employee", new { SortBy = EmployeeSortBy.Department, IsDescending = ViewBag.SortBy == EmployeeSortBy.Department && !ViewBag.IsDescending })">
                        Department
                    </a>
                </th>
                <th>
                    <a href="@Url.Action("Index", "Employee", new { SortBy = EmployeeSortBy.Salary, IsDescending = ViewBag.SortBy == EmployeeSortBy.Salary && !ViewBag.IsDescending })">
                        Salary
                    </a>
                </th>
                <th>Date of Joining</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Model.Data)
            {
                <tr>
                    <td>@employee.Name</td>
                    <td>@employee.DepartmentName</td>
                    <td>@employee.Salary</td>
                    <td>@employee.DateOfJoining.ToString("yyyy-MM-dd")</td>
                    <td>
                        <a href="@Url.Action("Edit", "Employee", new { id = employee.EmployeeID })" class="btn btn-warning btn-sm">Edit</a>
                        <a href="@Url.Action("Delete", "Employee", new { id = employee.EmployeeID })" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this employee?');">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="pagination">
        @if (ViewBag.CurrentPage > 1)
        {
            <a href="@Url.Action("Index", "Employee", new  { SearchQuery = ViewBag.SearchQuery, DepartmentId = ViewBag.DepartmentId, PageNumber = 1, PageSize = ViewBag.PageSize })" class="btn btn-light btn-sm">First</a>
            <a href="@Url.Action("Index", "Employee", new { SearchQuery = ViewBag.SearchQuery, DepartmentId = ViewBag.DepartmentId, PageNumber = ViewBag.CurrentPage - 1, PageSize = ViewBag.PageSize })" class="btn btn-light btn-sm">Previous</a>
        }

        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
        {
            <a href="@Url.Action("Index", "Employee", new { SearchQuery = ViewBag.SearchQuery, DepartmentId = ViewBag.DepartmentId, PageNumber = ViewBag.CurrentPage + 1, PageSize = ViewBag.PageSize })" class="btn btn-light btn-sm">Next</a>
            <a href="@Url.Action("Index", "Employee", new { SearchQuery = ViewBag.SearchQuery, DepartmentId = ViewBag.DepartmentId, PageNumber = ViewBag.TotalPages, PageSize = ViewBag.PageSize })" class="btn btn-light btn-sm">Last</a>
        }
    </div>
}
